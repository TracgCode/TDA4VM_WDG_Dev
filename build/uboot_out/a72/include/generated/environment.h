#define CONFIG_EXTRA_ENV_TEXT "addr_fit=0x90000000\0args_all=setenv optargs earlycon=ns16550a,mmio32,0x02800000 ${mtdparts}\0args_mmc=run finduuid;setenv bootargs console=${console} ${optargs} root=PARTUUID=${uuid} rw rootfstype=${mmcrootfstype}\0args_ufs=setenv devtype scsi;setenv bootpart 1:1; run ufs_finduuid; setenv bootargs console = ${console} ${optargs} root=PARTUUID=${uuid} rw rootfstype=${scsirootfstype}; setenv devtype scsi; setenv bootpart 1:1\0boot=mmc\0boot_fdt=try\0boot_fit=0\0boot_rprocs=if test ${dorprocboot} -eq 1 && test ${boot} = mmc; then rproc init; run boot_rprocs_mmc; fi;\0boot_rprocs_mmc=env set rproc_id; env set rproc_fw; env set secure_suffix; if test ${secure_rprocs} -eq 1; then env set secure_suffix -sec; fi; for i in ${rproc_fw_binaries} ; do if test -z \"${rproc_id}\" ; then env set rproc_id $i; else env set rproc_fw $i${secure_suffix}; run rproc_load_and_boot_one; env set rproc_id; env set rproc_fw; fi; done\0bootcmd_ti_mmc=run findfdt; run init_${boot}; run main_cpsw0_qsgmii_phyinit; run boot_rprocs; if test ${boot_fit} -eq 1; then run get_fit_${boot}; run get_overlaystring; run run_fit; else; run get_kern_${boot}; run get_fdt_${boot}; run get_overlay_${boot}; run run_kern; fi;\0bootdir=/boot\0bootenvfile=uEnv.txt\0bootm_size=0x10000000\0bootpart=1:2\0bootscript=echo Running bootscript from mmc${mmcdev} ...; source ${loadaddr}\0console=ttyS2,115200n8\0default_device_tree=ti/k3-j721e-common-proc-board.dtb\0dfu_alt_info_emmc=rawemmc raw 0 0x800000 mmcpart 1; rootfs part 0 1; tiboot3.bin.raw raw 0x0 0x400 mmcpart 1; tispl.bin.raw raw 0x400 0x1000 mmcpart 1; u-boot.img.raw raw 0x1400 0x2000 mmcpart 1; u-env.raw raw 0x3400 0x100 mmcpart 1; sysfw.itb.raw raw 0x3600 0x800 mmcpart 1\0dfu_alt_info_mmc=boot part 1 1; rootfs part 1 2; tiboot3.bin fat 1 1; tispl.bin fat 1 1; u-boot.img fat 1 1; uEnv.txt fat 1 1; sysfw.itb fat 1 1\0dfu_alt_info_nand=NAND.tiboot3 part 0 1; NAND.tispl part 0 2; NAND.tiboot3.backup part 0 3; NAND.u-boot part 0 4; NAND.u-boot-env part 0 5; NAND.u-boot-env.backup part 0 6; NAND.file-system part 0 7\0dfu_alt_info_ospi=tiboot3.bin raw 0x0 0x080000; tispl.bin raw 0x080000 0x200000; u-boot.img raw 0x280000 0x400000; u-boot-env raw 0x680000 0x020000; sysfw.itb raw 0x6c0000 0x100000; rootfs raw 0x800000 0x3800000\0dfu_alt_info_ospi_nand=ospi_nand.tiboot3 part 1; ospi_nand.tispl part 2; ospi_nand.u-boot part 3; ospi_nand.env part 4; ospi_nand.env.backup part 5; ospi_nand.rootfs part 6; ospi_nand.phypattern part 7\0dfu_alt_info_ram=tispl.bin ram 0x80080000 0x200000; u-boot.img ram 0x81000000 0x400000\0dorprocboot=1\0dtboaddr=0x89000000\0envboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev}; if run loadbootscript; then run bootscript; else if run loadbootenv; then echo Loaded env from ${bootenvfile}; run importbootenv; fi; if test -n $uenvcmd; then echo Running uenvcmd ...; run uenvcmd; fi; fi; fi;\0fdt_addr_r=0x88000000\0fdtaddr=0x88000000\0fdtoverlay_addr_r=0x89000000\0findfdt=setenv name_fdt ${default_device_tree}; if test $board_name = j721e; then setenv name_fdt ti/k3-j721e-common-proc-board.dtb; fi; if test $board_name = BBONEAI-64-B0-; then setenv name_fdt k3-j721e-beagleboneai64.dtb; fi; if test $board_name = j7200; then setenv name_fdt ti/k3-j7200-common-proc-board.dtb; fi; if test $board_name = j721e-eaik || test $board_name = j721e-sk; then setenv name_fdt ti/k3-j721e-sk.dtb; fi; setenv fdtfile ${name_fdt}\0finduuid=part uuid ${boot} ${bootpart} uuid\0get_fdt_mmc=load mmc ${bootpart} ${fdtaddr} ${bootdir}/dtb/${name_fdt}\0get_fdt_ufs=load ${devtype} ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}\0get_fit_config=setexpr name_fit_config gsub / _ conf-${fdtfile}\0get_fit_mmc=load mmc ${bootpart} ${addr_fit} ${bootdir}/${name_fit}\0get_kern_mmc=load mmc ${bootpart} ${loadaddr} ${bootdir}/${name_kern}\0get_kern_ufs=load ${devtype} ${bootpart} ${loadaddr} ${bootdir}/${name_kern}\0get_overlay_mmc=fdt address ${fdtaddr}; fdt resize 0x100000; for overlay in $name_overlays; do; load mmc ${bootpart} ${dtboaddr} ${bootdir}/dtb/${overlay} && fdt apply ${dtboaddr}; done;\0get_overlay_ufs=fdt address ${fdtaddr}; fdt resize 0x100000; for overlay in $name_overlays; do; load scsi ${bootpart} ${dtboaddr} ${bootdir}/${overlay} && fdt apply ${dtboaddr}; done;\0get_overlaystring=for overlay in $name_overlays; do; setenv overlaystring ${overlaystring}'#'${overlay}; done;\0importbootenv=echo Importing environment from mmc${mmcdev} ...; env import -t ${loadaddr} ${filesize}\0init_main_cpsw0_qsgmii_phy=gpio set gpio@22_17; gpio clear gpio@22_16\0init_mmc=run args_all args_mmc\0init_ufs=ufs init; scsi scan; run args_ufs\0kernel_addr_r=0x82000000\0loadaddr=0x82000000\0loadbootenv=fatload mmc ${mmcdev} ${loadaddr} ${bootenvfile}\0loadbootscript=load mmc ${mmcdev} ${loadaddr} boot.scr\0loadfdt=load ${devtype} ${bootpart} ${fdtaddr} ${bootdir}/dtb/${fdtfile}\0loadimage=load ${devtype} ${bootpart} ${loadaddr} ${bootdir}/${bootfile}\0main_cpsw0_qsgmii_phyinit=if test $board_name = J721EX-PM1-SOM || test $board_name = J721EX-PM2-SOM || test $board_name = j721e; then do_main_cpsw0_qsgmii_phyinit=1; else do_main_cpsw0_qsgmii_phyinit=0; fi; if test ${do_main_cpsw0_qsgmii_phyinit} -eq 1 && test ${dorprocboot} -eq 1 && test ${boot} = mmc; then run init_main_cpsw0_qsgmii_phy; fi;\0mmcboot=mmc dev ${mmcdev}; devnum=${mmcdev}; devtype=mmc; if mmc rescan; then echo SD/MMC found on device ${mmcdev}; if run loadimage; then run args_mmc; if test ${boot_fit} -eq 1; then run run_fit; else run mmcloados; fi; fi; fi;\0mmcdev=1\0mmcloados=if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run get_fdt_mmc; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;\0mmcrootfstype=ext4 rootwait\0name_fit=fitImage\0name_kern=Image\0partitions=name=rootfs,start=0,size=-,uuid=${uuid_gpt_rootfs}\0pxefile_addr_r=0x80100000\0ramdisk_addr_r=0x88080000\0rd_spec=-\0rdaddr=0x88080000\0rproc_fw_binaries=2 /lib/firmware/j7-main-r5f0_0-fw 3 /lib/firmware/j7-main-r5f0_1-fw 4 /lib/firmware/j7-main-r5f1_0-fw 5 /lib/firmware/j7-main-r5f1_1-fw 6 /lib/firmware/j7-c66_0-fw 7 /lib/firmware/j7-c66_1-fw 8 /lib/firmware/j7-c71_0-fw\0rproc_load_and_boot_one=if load mmc ${bootpart} $loadaddr ${rproc_fw}; then if rproc load ${rproc_id} ${loadaddr} ${filesize}; then rproc start ${rproc_id}; fi; fi\0run_fit=run get_fit_config; bootm ${addr_fit}#${name_fit_config}${overlaystring}\0run_kern=booti ${loadaddr} ${rd_spec} ${fdtaddr}\0scriptaddr=0x80000000\0scsirootfstype=ext4 rootwait\0ufs_finduuid=part uuid scsi ${bootpart} uuid\0update_to_fit=setenv loadaddr ${addr_fit}; setenv bootfile ${name_fit}\0"
